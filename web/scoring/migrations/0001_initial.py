# Generated by Django 3.2.25 on 2025-04-20 10:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('registration', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='GameControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition_name', models.CharField(default='My A/D CTF', max_length=100)),
                ('services_public', models.DateTimeField(null=True)),
                ('start', models.DateTimeField(null=True)),
                ('end', models.DateTimeField(null=True)),
                ('tick_duration', models.PositiveSmallIntegerField(default=180)),
                ('valid_ticks', models.PositiveSmallIntegerField(default=5, help_text='Currently unused')),
                ('current_tick', models.IntegerField(default=-1)),
                ('cancel_checks', models.BooleanField(default=False)),
                ('flag_prefix', models.CharField(default='FLAG_', max_length=20)),
                ('registration_open', models.BooleanField(default=False)),
                ('registration_confirm_text', models.TextField(blank=True)),
                ('min_net_number', models.PositiveIntegerField(blank=True, null=True)),
                ('max_net_number', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Game control',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('slug', models.SlugField(help_text='Simplified name for use in paths', max_length=30, unique=True)),
                ('margin', models.PositiveIntegerField(default=30, help_text='Safety margin (in seconds) for checker scheduling, gets added to the automatically determined check duration')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attack', models.FloatField(editable=False)),
                ('defense', models.FloatField(editable=False)),
                ('sla', models.FloatField(editable=False)),
                ('total', models.FloatField(editable=False)),
                ('service', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to='scoring.service')),
                ('team', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to='registration.team')),
            ],
            options={
                'ordering': ('team', '-total', '-attack', '-defense'),
            },
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tick', models.PositiveIntegerField()),
                ('placement_start', models.DateTimeField(blank=True, default=None, null=True)),
                ('placement_end', models.DateTimeField(blank=True, default=None, null=True)),
                ('flagid', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('protecting_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.team')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scoring.service')),
            ],
            options={
                'unique_together': {('service', 'protecting_team', 'tick')},
                'index_together': {('service', 'protecting_team', 'tick'), ('service', 'tick')},
            },
        ),
        migrations.CreateModel(
            name='StatusCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tick', models.PositiveIntegerField(db_index=True)),
                ('status', models.SmallIntegerField(choices=[(0, 'up'), (1, 'down'), (2, 'faulty'), (3, 'flag not found'), (4, 'recovering'), (5, 'timeout')])),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scoring.service')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.team')),
            ],
            options={
                'unique_together': {('service', 'team', 'tick')},
                'index_together': {('service', 'team', 'status'), ('service', 'tick', 'status')},
            },
        ),
        migrations.CreateModel(
            name='CheckerState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('data', models.TextField()),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scoring.service')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.team')),
            ],
            options={
                'unique_together': {('service', 'team', 'key')},
                'index_together': {('service', 'team', 'key')},
            },
        ),
        migrations.CreateModel(
            name='Capture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tick', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('capturing_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.team')),
                ('flag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scoring.flag')),
            ],
            options={
                'unique_together': {('flag', 'capturing_team')},
                'index_together': {('flag', 'capturing_team')},
            },
        ),
    ]
